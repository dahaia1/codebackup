一、键盘输入一个整数组成的元组   十个数据

1.求元组最大数据 ，最小数据。平均值
2.切片元组  第3到9个元素
3.元素尾部追加数据 666
4.统计666出现次数

二。创建元组生成器对象    元组值在  1到10的立方中取得
     1.  验证27  是否在元组中
      2.再次验证   8是否在元组中   



・・・・・・・・・・・・・・・・・・・・・・・・・・・
>>> data = (1, 2, 3, 4)
>>> print(len(data))              # 元组长度，即元素数量
4
>>> print(max(data), min(data))  # 最大值，最小值
4 1
>>> print(data[0])                 # 元组中下标为0的元素
1
>>> print(data[-2])                # 元组中倒数第2个元素
3
>>> print(data + (5,6))            # 使用加号连接两个元组
(1, 2, 3, 4, 5, 6)
>>> print(data * 3)                 # 元组与整数相乘，返回新元组
(1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4)
>>> print(data[2:])                 # 切片，元组中下标2以及后面的元素
(3, 4)
>>> print(data.count(3))           # 元组中元素3出现的次数
1
>>> print(data.index(3))           # 元组中元素3首次出现的下标
2
# 创建生成器对象
>>> g = (i**2 for i in range(10))
# 把生成器对象转换为列表，用完了生成器对象中的所有元素
>>> list(g)
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
# 此时生成器对象中已经没有任何元素，转换得到空列表
>>> list(g)
[]
# 重新创建生成器对象
>>> g = (i**2 for i in range(10))
# 生成器对象中包含4，返回True，不再检查后面的元素
# 这时用完了生成器对象中元素4以及前面的所有元素
>>> 4 in g
True
# 从生成器对象中元素4的下一个元素开始检查
# 因为生成器对象中不再包含元素4，所以检查完所有元素才能得出结论
# 这次测试用完了生成器对象中的所有元素
>>> 4 in g
False
# 此时生成器对象中已经没有任何元素
>>> 49 in g
False


